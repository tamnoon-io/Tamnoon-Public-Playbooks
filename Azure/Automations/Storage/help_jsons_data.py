# This is a readonly file, do not edit directly, to change update json files of module Storage

storage_account_remove_public_network_access= {'help': 'This action removes public network access for the storage account.', 'cli_args': {'subscriptions': "list of Subscription ids. If not given then default value is 'all', i.e., remedy will configure all the Subscriptions available in the Tenant.", 'resourceGroups': "list of Resource Group names. When given, remedy will configure only specified Resource Groups. otherwise default value is 'all', i.e., remedy will configure all Resource Groups available in the Subscription.", 'storageAccounts': "list of Storage Account names. If not given then default value is 'all', i.e., remedy will configure all the Storage Accounts available in the Resource Group.", 'regions': "list of Regions. If not given then default value is 'all', i.e., remedy will configure all the Storage Accounts without checking its regions.", 'actionParams': 'For Remedy:\n1. access_level - (Required) - value can be only on of enabled-from-all-networks,\n    enabled-from-selected-virtual-networks-and-ip-addresses and disabled.\n\n    1. enabled-from-all-networks - any network can access containers of storage accounts. Does not need\n        any additional action params\n\n        example:\n\n            --actionParams \'{"access-level": "enabled-from-all-networks"}\'\n    2. enabled-from-selected-virtual-networks-and-ip-addresses  -   Some selected networks can access \n        containers of storage accounts. \n            For this access_level, you need following additional access params\n        \n        1. vnets - (Optional) - list of dictionary of virtual network name and boolean value allow.\n            Example, [{"name": "virtual-network-1", "allow": true}, {"name": "virtual-network-2", "allow": false}]\n        2. ip - (Optional) - list of dictionary of ip address or CIDR range value and boolean value allow.\n            Example, [{"value":"117.0.0.0/24","allow":true}, {"value":"117.100.0.0/24","allow":false}]\n            \n            example:\n\n                --actionParams \'{"access-level": "enabled-from-selected-virtual-networks-and-ip-addresses", "vnets":[{"name":"vnet1","allow":true},{"name":"vnet2","allow":false}],"ip":[{"value":"117.0.0.0/24","allow":true}]}\'\n    3. disabled - no network can access containers of storage accounts. Does not need\n        any additional action params\n\n        example:\n\n            --actionParams \'{"access-level": "disabled"}\'\n\nFor Rollback:\n1. rollBack - (Required) - Boolean flag to sign if this is a rollback call (required the existing of state file)\n2. lastExecutionResultPath (Required) - The path for the last execution that we want to roll-back from.\n', 'file': 'the path to a yml/json file that contain all the script input parameters.', 'dryRun': 'Flag that mark if this is a dry run.', 'outputType': 'the type of output of script execution. available options are json (default) and csv', 'outDir': 'the path to store output of script execution. default is current working directory', 'logLevel': "used to categorize and prioritize log levels based on severity or importance. It's values can be INFO,DEBUG,WARNING,ERROR or CRITICAL. Default value is set to INFO", 'testId': 'description for test to be executed'}}

blob_container_remove_public_access_storage_containers= {'help': 'This action is crucial for bolstering security in Azure Blob Containers. It is used to swiftly eliminate public access permissions, safeguarding sensitive data and preventing unauthorized entry.', 'cli_args': {'subscriptions': "list of Subscription ids. If not given then default value is 'all', i.e., remedy will search for Blob Containers in all the Subscriptions available in the Tenant.", 'resourceGroups': "list of Resource Group names. When given, remedy will configure only specified Resource Groups. Otherwise default value is 'all', i.e., remedy will search for Blob Containers in all Resource Groups available in the Subscription.", 'storageAccounts': "list of Storage Account names. If not given then default value is 'all', i.e., remedy will search for Blob Containers in all the Storage Accounts available in the Resource Group.", 'regions': "list of Regions. If not given then default value is 'all', i.e., remedy will search for Blob Containers in all the Storage Accounts without checking its regions.", 'assetIds': "list of Blob Container names. If not given then default value is 'all', i.e., remedy will configure all the Blob Containers available in the Storage Account.", 'actionParams': 'For Remedy:\n 1. anonymous-access-level - (Required) - access level of blob containers will be set to this value.\n    User can provide either "container" or "blob" or "none", where "none" access level means Private.\n2. exclude-storage-containers - (Optional) - list of Blob Container names in Storage Accounts. When\n    given, remedy will configure all the Blob Containers available in the Storage Account except \n    those provided with this option.\n    Please note that to exclude a Blob Container, it should be mentioned with its\n    storage account name, separated by dot. \n    Example, "storage_account_1.blob_container_1" \n\nFor Rollback:\n1. rollBack - (Required) - Boolean flag to sign if this is a rollback call (required the existing of state file)\n2. lastExecutionResultPath (Required) - The path for the last execution that we want to roll-back from.\n', 'file': 'the path to a yml/json file that contain all the script input parameters.', 'dryRun': 'Flag that mark if this is a dry run.', 'outputType': 'the type of output of script exucution. available options are json (default) and csv', 'outDir': 'the path to store output of script exucution. default is current working directory', 'logLevel': "used to categorize and prioritize log levels based on severity or importance. It's values can be INFO,DEBUG,WARNING,ERROR or CRITICAL. Default value is set to INFO", 'testId': 'description for test to be executed'}}

blob_container_enable_log_analytics_logs_for_azure_storage_blobs= {'help': 'This action in Azure Storage enables seamless integration of storage blob analytics logs with Azure Log Analytics. By executing this action, you can gain valuable insights and analytics on blob storage activities, facilitating comprehensive monitoring, troubleshooting, and optimization of your storage resources.', 'cli_args': {'subscriptions': "list of Subscription ids. If not given then default value is 'all', i.e., remedy will search for Storage Accounts in all the Subscriptions available in the Tenant.", 'resourceGroups': "list of Resource Group names. When given, remedy will configure only specified Resource Groups. Otherwise default value is 'all', i.e., remedy will search for Storage Accounts in all Resource Groups available in the Subscription.", 'storageAccounts': "list of Storage Account names. If not given then default value is 'all', i.e., remedy will configure all the Storage Accounts available in the Resource Group.", 'regions': "list of Regions used to find Storage Accounts by location and create Log Analytics Workspace. If not given then default value is 'all', i.e., remedy will search for Storage Accounts in all the Storage Accounts without checking its regions. If provided, then logging is enabled in all given Storage Accounts in given Subscriptions which are found with any of the given regions. Same region is used to create Log Analytics Workspace, if required in given Subscriptions.", 'actionParams': 'For remedy:\n1. log-analytics-workspace-name - (Required) - name of log analytics workspace, where \n   you want your storage account to direct its logs to\n2. create-la-ws - (Optional) - Boolean flag to create workspace with\n   log-analytics-workspace-name, if it is not found in given subscription\n\nFor Rollback:\n1. rollBack - (Required) - Boolean flag to sign if this is a rollback call (required the existing of state file)\n2. lastExecutionResultPath (Required) - The path for the last execution that we want to roll-back from.', 'file': 'the path to a yml/json file that contain all the script input parameters.', 'dryRun': 'Flag that mark if this is a dry run.', 'outputType': 'the type of output of script exucution. available options are json (default) and csv', 'outDir': 'the path to store output of script exucution. default is current working directory', 'logLevel': "used to categorize and prioritize log levels based on severity or importance. It's values can be INFO,DEBUG,WARNING,ERROR or CRITICAL. Default value is set to INFO", 'testId': 'description for test to be executed'}}

common_json_data= {'help': {'Storage': {'blob-container': 'Azure Blob Container is a scalable storage unit in Azure for organizing unstructured data like images or documents. It offers secure, efficient storage', 'storage-account': 'Azure Storage Account is your centralized solution for secure, scalable data storage in the cloud. Manage diverse data types efficiently, control access'}, 'Network': {'network-security-group': 'Azure Network Security Group acts as a virtual firewall for your Azure resources. It allows you to control inbound and outbound traffic to your resources, providing an additional layer of security for your applications.'}, 'DBServer': {'sql-server': 'Azure SQL Server a fully managed relational database service on Azure, offering scalability, security, and simplified management for structured data.', 'mysql-server': 'Azure MySQL Server open-source relational database managed service on Azure, providing scalability, high availability, and seamless integration with cloud services.', 'postgresql-server': 'Azure PostgreSQL Server is managed service on Azure for the open-source PostgreSQL database, offering scalability, advanced data handling, and reliable database management.'}}, 'usage': {'Storage': 'python3 -m Automations.Storage', 'Network': 'python3 -m Automations.Network', 'DBServer': 'python3 -m Automations.DBServer'}}
