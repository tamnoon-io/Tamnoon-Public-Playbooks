# Do not edit this file directly. To make changes, update the associated json files that are located in LogsInvestigation.

events_history_readme= {'help': 'This action helps to investigate and query the events history logs using LookUpEvents API', 'cli_args': {'profile': 'Aws Account Profile', 'awsAccessKey': 'Aws Access Key', 'awsSecret': 'Aws Secret Key', 'awsSessionToken': 'Aws Session Token', 'regions': 'This automation supports regions. Even though some Attributes themselves may not be restricted by regions - such as Username, AccessKeyId, etc - their usage can be traced differently across different regions.\n\nTherefore, when you run this automation, you may want to specify from which regions to find activity of given Attribute.\nYou may specify regions as comma separated list or as all.\n\nexample:   \n```\n--regions us-east-1,us-east-2  \n```  \nor  \n```\n--regions all\n```', 'actionParams': '- AttributeKey: Attribute Key supported by events history. Automation will find the events history for this AttributeKey. There is no default value.\n    example:  \n    ```cli\n    --actionParams \'{"AttributeKey": "AccessKeyId"}\'\n    ```\n    Supported AttributeKeys are listed here:\n    -   EventId\n    -   EventName\n    -   ReadOnly\n    -   Username\n    -   ResourceType\n    -   ResourceName\n    -   EventSource\n    -   AccessKeyId  \n\n- AttributeValue: Attribute Value supported by events history. Automation will find the events history for this AttributeValue. There is no default value.\n    example:  \n    ```cli\n    --actionParams \'{"AttributeValue": "xxxxx"}\'\n    ```\n\n- days: number of recent days. Automation will find the events history for this given duration between now and N days ago as given in actionParams. Default value is 90.\n    example:  \n    ```cli\n    --actionParams \'{"days": 15}\'\n    ```  \n  For more details, follow [TImpact_events_history.md](https://github.com/tamnoon-io/Tamnoon-Public-Playbooks/blob/main/AWS/Playbooks/LogsInvestigations/TImpact_events_history.md)', 'file': 'The path to a yml/json file that contain all the script input parameters.', 'outputType': 'The type of output of script execution. available options are json (default) and csv', 'outDir': 'The path to store output of script execution. default is current working directory', 'logLevel': "Used to categorize and prioritize log levels based on severity or importance. It's values can be INFO,DEBUG,WARNING,ERROR or CRITICAL. Default value is set to INFO", 'testId': 'Description for test to be executed'}}

cloudtrail_data_readme= {'help': 'This action helps to investigate and query the cloudtrail logs using athena', 'cli_args': {'profile': 'Aws Account Profile', 'awsAccessKey': 'Aws Access Key', 'awsSecret': 'Aws Secret Key', 'awsSessionToken': 'Aws Session Token', 'regions': 'This automation supports regions. Even though some Attributes themselves may not be restricted by regions - such as Username, AccessKeyId, etc - their usage can be traced differently across different regions.\n\nTherefore, when you run this automation, you may want to specify from which regions to find activity of given Attribute.\nYou may specify regions as comma separated list or as all.\n\nexample:   \n```\n--regions us-east-1,us-east-2  \n```  \nor  \n```\n--regions all\n```', 'assetIds': 'This contains Cloudtrail Trail Name', 'actionParams': '- QueryFieldName: QueryFieldName Key supported by athena table schema. Automation will find the logs for this QueryFieldName. There is no default value.\n\n    example:  \n    ```cli\n    --actionParams \'{"QueryFieldName": [\'value1\', \'value2\', ...]}\'\n    ``` \n-  QueryFieldName can be replaced by any of the supported QueryFieldNames displayed below.\n    ```cli \n    --actionParams \'{"eventname": [\'eventname-1\', \'eventname-2\', ...]}\'\n    ```\n- QueryFieldNames such as  *useridentity*, *additionaleventdata*, *resources* and *tlsdetails* contains sub-fields so to match those. You need to use *.* operator as shown below. \n    example:  \n    ```cli\n    --actionParams \'{"useridentity.username": "<value>"}\'\n    ```\n  OR\n    ```cli\n    --actionParams \'{"useridentity.username": [\'value1\', \'value2\', ...]}\'\n    ```\nNote : While filtering using resources , one additional key named filtered_resource is added into the result json file each record. filtered_resource is the filter resource arn provided in actionParams.\n    \n- days: number of recent days. Automation will find the event history for this given duration between now and N days ago as given in actionParams. Default value is 90.\n\n    example:  \n    ```cli\n    --actionParams \'{"days": "15"}\'\n    ```  \n- cleanup: To delete the generated tables, s3 bucket output logs.\n\n    example:  \n    ```cli\n    --actionParams \'{"cleanup": true}\'\n    ```  \n  For more details, follow [TImpact_cloudtrail.md](https://github.com/tamnoon-io/Tamnoon-Public-Playbooks/blob/main/AWS/Playbooks/LogsInvestigations/TImpact_cloudtrail.md)', 'file': 'The path to a yml/json file that contain all the script input parameters.', 'outputType': 'The type of output of script execution. available options are json (default) and csv', 'outDir': 'The path to store output of script execution. default is current working directory', 'logLevel': "Used to categorize and prioritize log levels based on severity or importance. It's values can be INFO,DEBUG,WARNING,ERROR or CRITICAL. Default value is set to INFO", 'testId': 'Description for test to be executed'}}

common_json_data= {'help': {'EC2Actions': {'snapshot': 'An EBS snapshot is a point-in-time, incremental backup of an Amazon Elastic Block Store (EBS) volume stored in Amazon S3, allowing restoration of the volume to its exact state at the time of the snapshot.', 'security-group': 'An AWS Security Group acts as a virtual firewall that controls inbound and outbound traffic to AWS resources within a Virtual Private Cloud (VPC) based on specified security rules.', 'vpc': 'An AWS Virtual Private Cloud (VPC) is a customizable network environment that allows users to launch AWS resources in a logically isolated, secure section of the AWS Cloud.', 'ec2': 'Amazon EC2 (Elastic Compute Cloud) is a web service that provides resizable compute capacity in the cloud, allowing users to run virtual servers to host applications and services.', 'subnet': "An AWS Subnet is a segment of a VPC's IP address range where you can place groups of isolated resources based on security and operational needs within a larger VPC network.", 'alb': 'An Application Load Balancer is an Elastic Load Balancing service provided by AWS that functions at the application layer, the seventh layer of the Open Systems Interconnection (OSI) model.'}, 'CloudFormation': {'describe-stack-resources': 'Determines whether the resource is part of a CloudFormation stack. If so, the results describe all resources deployed by the CloudFormation stack.'}, 'RDSActions': {'rds': 'Amazon Relational Database Service (Amazon RDS) is an easy-to-manage relational database service optimized for total cost of ownership. It is simple to set up, operate, and scale with demand. Amazon RDS automates the undifferentiated database management tasks, such as provisioning, configuring, backups, and patching'}, 'IAMActions': {'iam-user': 'An AWS Identity and Access Management (IAM) user is an entity that you create in AWS. The IAM user represents the human user or workload who uses the IAM user to interact with AWS. A user in AWS consists of a name and credentials.'}, 'S3Actions': {'s3': 'Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance.S3 is used to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics.'}, 'LogsInvestigation': {'cloudtrail': 'AWS CloudTrail is an AWS service that helps you enable operational and risk auditing, governance, and compliance of your AWS account. Actions taken by a user, role, or an AWS service are recorded as events in CloudTrail. The recorded events are stored in S3 bucket and queried using athena.', 'events-history': 'The Event history provides a viewable, searchable, downloadable, and immutable record of the past 90 days of management events in an AWS Region'}}, 'usage': {'EC2Actions': 'python3 -m Automations.EC2Actions', 'CloudFormation': 'python3 -m Automations.CloudFormation', 'S3Actions': 'python3 -m Automations.S3Actions', 'IAMActions': 'python3 -m Automations.IAMActions', 'RDSActions': 'python3 -m Automations.RDSActions', 'EBS_Encryption': '', 'LogsInvestigation': 'python3 -m Automations.LogsInvestigation'}}
